{"version":3,"sources":["components/Card.js","objects-factories/playersFactory.js","gameData.js","helperFunctions.js","components/AllCards.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","round","clicked","setClicked","useEffect","imageFile","player","imageName","className","onClick","addCounter","restart","alert","src","alt","name","surname","playersFactory","birth","country","gameData","francescoli","maradona","messi","ronaldinho","gonzalez","beckenbauer","cruyff","maldini","playersArray","helperFunctions","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","AllCards","counter","setCounter","bestScore","setBestScore","setRound","players","cards","Object","keys","map","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49d43da7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Card = (props) => {\n  const [clicked, setClicked] = useState(props.round);\n\n  const clickHandler = () => {\n    if (typeof clicked === 'number') {\n      props.addCounter();\n      setClicked('yes');\n    } else if (clicked === 'yes') {\n      props.restart();\n      alert('You Lost!');\n    }\n  };\n\n  useEffect(() => {\n    setClicked(props.round);\n  }, [props.round]);\n\n  const imageFile = 'player_images/' + props.player.imageName + '.jpeg';\n\n  return (\n    <div className=\"card\" onClick={clickHandler}>\n      <img className=\"card-image\" src={imageFile} alt={props.player} />\n      <div className=\"fullname-container\">\n        <h2 className=\"player-name\">{props.player.name + ' '}</h2>\n        <h2 className=\"player-surname\">{props.player.surname}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","const playersFactory = (name, surname, birth, country, imageName) => {\n  return { name, surname, birth, country, imageName };\n};\n\nexport default playersFactory;","import playersFactory from \"./objects-factories/playersFactory\";\n\n\nconst gameData = (() => {\n  const francescoli = playersFactory(\"Enzo\", \"Francescoli\", \"24/02/1995\", \"Uruguay\", \"francescoli\")\n  const maradona = playersFactory(\"Diego Armando\", \"Maradona\", \"24/02/1995\", \"Argentina\", \"maradona\")\n  const messi = playersFactory(\"Lionel\", \"Messi\", \"24/02/1995\", \"Argentina\", \"messi\")\n  const ronaldinho = playersFactory(\"\", \"Ronaldinho\", \"24/02/1995\", \"Brazil\", \"ronaldinho\")\n  const gonzalez = playersFactory(\"Tata\", \"Gonzalez\", \"24/02/1995\", \"Uruguay\", \"gonzalez\")\n  const beckenbauer = playersFactory(\"Franz\", \"Beckenbauer\", \"24/02/1995\", \"Germany\", \"beckenbauer\")\n  const cruyff = playersFactory(\"Johan\", \"Cruyff\", \"24/02/1995\", \"Holland\", \"cruyff\")\n  const maldini = playersFactory(\"Paolo\", \"Maldini\", \"24/02/1995\", \"Italy\", \"maldini\")\n  const suarez = playersFactory(\"Luis\", \"Suarez\", \"24/02/1995\", \"Uruguay\", \"suarez\")\n  const pele = playersFactory(\"\", \"Pele\", \"24/02/1995\", \"Brazil\", \"pele\")\n  const platini = playersFactory(\"Michel\", \"Platini\", \"24/02/1995\", \"France\", \"platini\")\n  const puyol = playersFactory(\"Carles\", \"Puyol\", \"24/02/1995\", \"Spain\", \"puyol\")\n  const ronaldo = playersFactory(\"\", \"Ronaldo\", \"24/02/1995\", \"Brazil\", \"ronaldo\")\n  const zidane = playersFactory(\"Zidanine\", \"Zidane\", \"24/02/1995\", \"France\", \"zidane\")\n  const cristiano = playersFactory(\"Cristiano\", \"Ronaldo\", \"24/02/1995\", \"Protugal\", \"cristiano\")\n\n  const playersArray = [\n    francescoli, \n    maradona, \n    messi, \n    ronaldinho, \n    suarez, \n    gonzalez, \n    beckenbauer, \n    cruyff, \n    maldini, \n    pele, \n    platini, \n    puyol, \n    ronaldo, \n    zidane, \n    cristiano\n  ]\n\n  return {\n    playersArray,\n  };\n})();\n\nexport default gameData\n","const helperFunctions = (() => {\n\n  function shuffle(array) {\n    var currentIndex = array.length,  randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  return {\n    shuffle,\n  };\n})();\n\nexport default helperFunctions","import React, { useState } from 'react';\nimport Card from './Card';\nimport gameData from '../gameData';\nimport helperFunctions from '../helperFunctions';\n\nfunction AllCards() {\n  const [counter, setCounter] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [round, setRound] = useState(0);\n\n  const players = gameData.playersArray;\n\n  const addCounter = () => {\n    setCounter(counter + 1);\n  };\n\n  const checkBestScore = () => {\n    if (counter > bestScore) {\n      setBestScore(counter);\n    }\n  };\n\n  const restartCounter = () => {\n    setCounter(0);\n  };\n\n  const nextRound = () => {\n    setRound(round + 1);\n  };\n\n  const restart = () => {\n    checkBestScore();\n    restartCounter();\n    nextRound();\n  };\n\n  const cards = helperFunctions.shuffle(\n    Object.keys(players).map((key) => (\n      <Card key={key} player={players[key]} round={round} addCounter={addCounter} restart={restart} />\n    ))\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Football Legends <br />\n        <span className=\"subtitle-main\">Memory Game</span>\n      </h1>\n      <div className=\"board\">\n        <div className=\"score\">Best Score: {bestScore}</div>\n        <div className=\"counter\">Counter: {counter}</div>\n      </div>\n      <div className=\"cards\">{cards}</div>\n    </div>\n  );\n}\n\nexport default AllCards;\n","import './App.css';\nimport AllCards from './components/AllCards';\n\nfunction App() {\n  return (\n    < AllCards />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}